@model EmailPayload

@{
    ViewData["Title"] = "Compose Email";
}
<h1 class="display-5">@ViewData["Title"]</h1>

@using (Html.BeginForm())
{
    @if (!ViewData.ModelState.IsValid)
    {
        @Html.ValidationSummary(false, "Please correct the following errors:", new { @class = "text-danger" })
    }

    <div class="mb-3">
        @Html.LabelFor(model => model.FromName, new { @class="form-label" })
        <div class="input-group mb-3">
            @Html.TextBoxFor(model => model.FromName, new { @class="form-control" })
            <span class="input-group-text" >@@@Model.FromDomain</span>
        </div>
    </div>

    <div class="mb-3">

        @Html.LabelFor(model => model.To, new { @class="form-label" })

        <div data-recipientType="To">
            @for(int x = 0; x <= Model.To.Count - 1; x++)
            {
                <div class="input-group mb-3">
                    <input type="email" class="form-control" data-recipientType="To" data-index="@x" id="To[@x]" name="To" />
                </div>
            }
        </div>

        <div class="mb-3">
            <div class="btn-group" role="group" aria-label="Basic example">
              <button type="button" title="Add a Recipient" class="btn btn-info" onclick="addField('To');">+</button>
              <button type="button" title="Remove a Recipient" class="btn btn-warning">-</button>
            </div>
        </div>

    </div>

    <div class="mb-3">
        
        <h3>Body</h3>


    </div>

    @Html.HiddenFor(model => model.FromDomain);

    <button type="submit" class="btn btn-primary">Next</button>

}

<script type="text/javascript">
    function addField(recipientType) {

        let fields = document.querySelectorAll('input[data-recipientType="' + recipientType + '"]');

        let newIndex = fields.length + 1;

        let target = document.querySelector('div[data-recipientType="' + recipientType + '"]');

        let newDiv = document.createElement('div');
        newDiv.setAttribute('class', 'input-group mb-3');

        let newInput = document.createElement('input');
        newInput.setAttribute('type', 'email');
        newInput.setAttribute('class', 'form-control');
        newInput.setAttribute('data-recipientType', newIndex);
        newInput.setAttribute('data-index', newIndex);
        newInput.setAttribute('id', recipientType + `[${newIndex}]`);
        newInput.setAttribute('name', recipientType);

        newDiv.appendChild(newInput);
        target.appendChild(newDiv);
    }
</script>