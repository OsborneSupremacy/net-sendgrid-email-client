@model EmailPayload

@{
    ViewData["Title"] = "Compose Email";
}
<h1 class="display-5">@ViewData["Title"]</h1>

@using (Html.BeginForm())
{
    @if (!ViewData.ModelState.IsValid)
    {
        @Html.ValidationSummary(false, "Please correct the following errors:", new { @class = "text-danger" })
    }

    <div class="mb-3">
        @Html.LabelFor(model => model.FromName, new { @class="form-label" })
        <div class="input-group mb-3">
            @Html.TextBoxFor(model => model.FromName, new { @class="form-control", placeholder="From" })
            <span class="input-group-text" >@@@Model.FromDomain</span>
        </div>
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.Subject, new { @class="form-label" })
        <div class="input-group mb-3">
            @Html.TextBoxFor(model => model.Subject, new { @class="form-control", placeholder="Subject" })
        </div>
    </div>

    @*to*@
    <div class="mb-3">

        @Html.LabelFor(model => model.To, new { @class="form-label" })

        <div data-recipientType="To">
            @for(int x = 0; x <= Model.To.Count - 1; x++)
            {
                <div class="input-group mb-3">
                    <input type="email" value="@Model.To[x]" class="form-control" data-recipientType="To" id="To[@x]" name="To" placeholder="To" />
                </div>
            }
        </div>

        <div class="mb-3">
            <div class="btn-group" role="group">
              <button type="button" tabindex="-1" title="Add a Recipient" class="btn btn-info" onclick="addRecipientField('To');">+</button>
              <button type="button" tabindex="-1" title="Remove a Recipient" class="btn btn-warning" onclick="removeRecipientField('To');">-</button>
            </div>
        </div>

    </div>

    @*cc*@
    <div class="mb-3">

        @Html.LabelFor(model => model.Cc, new { @class="form-label" })

        <div data-recipientType="Cc">
            @for(int x = 0; x <= Model.Cc.Count - 1; x++)
            {
                <div class="input-group mb-3">
                    <input type="email" value="@Model.Cc[x]" class="form-control" data-recipientType="Cc" id="Cc[@x]" name="Cc" placeholder="Cc" />
                </div>
            }
        </div>

        <div class="mb-3">
            <div class="btn-group" role="group">
              <button type="button" tabindex="-1" title="Add a Recipient" class="btn btn-info" onclick="addRecipientField('Cc');">+</button>
              <button type="button" tabindex="-1" title="Remove a Recipient" class="btn btn-warning" onclick="removeRecipientField('Cc');">-</button>
            </div>
        </div>

    </div>

    @*bcc*@
    <div class="mb-3">

        @Html.LabelFor(model => model.Bcc, new { @class="form-label" })

        <div data-recipientType="Bcc">
            @for(int x = 0; x <= Model.Bcc.Count - 1; x++)
            {
                <div class="input-group mb-3">
                    <input type="email" value="@Model.Bcc[x]" class="form-control" data-recipientType="Bcc" id="Bcc[@x]" name="Bcc" placeholder="Bcc" />
                </div>
            }
        </div>

        <div class="mb-3">
            <div class="btn-group" role="group">
              <button type="button" tabindex="-1" title="Add a Recipient" class="btn btn-info" onclick="addRecipientField('Bcc');">+</button>
              <button type="button" tabindex="-1" title="Remove a Recipient" class="btn btn-warning" onclick="removeRecipientField('Bcc');">-</button>
            </div>
        </div>

    </div>

    <div class="mb-3">

        @Html.LabelFor(model => model.Body, new { @class="form-label" })

        @Html.TextAreaFor(model => model.Body,
            new {
                @class = "form-control",
                rows = 10,
                placeholder = "Message Body"
            }
        )

        <div class="form-text">Markdown supported</div>

    </div>

    @Html.HiddenFor(model => model.FromDomain);

    <button type="submit" onclick='this.form.action="/Email/Confirm"' class="btn btn-primary">Next</button>
}

